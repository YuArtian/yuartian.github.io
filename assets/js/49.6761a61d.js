(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{411:function(t,e,r){"use strict";r.r(e);var a=r(45),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"proxy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#proxy"}},[t._v("#")]),t._v(" Proxy")]),t._v(" "),r("p",[t._v("在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写")]),t._v(" "),r("h2",{attrs:{id:"语法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),r("div",{staticClass:"language-text extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("var proxy = new Proxy(target, handler);\n")])])]),r("div",{staticClass:"language-text extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("var obj = new Proxy({}, {\n  get: function (target, propKey, receiver) {\n    console.log(`getting ${propKey}!`);\n    return Reflect.get(target, propKey, receiver);\n  },\n  set: function (target, propKey, value, receiver) {\n    console.log(`setting ${propKey}!`);\n    return Reflect.set(target, propKey, value, receiver);\n  }\n});\n")])])]),r("p",[t._v("如果一个属性不可配置（configurable）且不可写（writable），则 Proxy 不能修改该属性，否则通过 Proxy 对象访问该属性会报错")]),t._v(" "),r("h2",{attrs:{id:"proxy-支持的拦截操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#proxy-支持的拦截操作"}},[t._v("#")]),t._v(" Proxy 支持的拦截操作")]),t._v(" "),r("p",[t._v("一共 13 种拦截操作")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("get(target, propKey, receiver)")]),t._v("：拦截对象属性的读取\n比如 "),r("code",[t._v("proxy.foo")]),t._v(" 和 "),r("code",[t._v("proxy['foo']")])]),t._v(" "),r("li",[r("strong",[t._v("set(target, propKey, value, receiver)")]),t._v("：拦截对象属性的设置\n比如 "),r("code",[t._v("proxy.foo = v")]),t._v("或 "),r("code",[t._v("proxy['foo'] = v")]),t._v("，返回一个布尔值")]),t._v(" "),r("li",[r("strong",[t._v("has(target, propKey)")]),t._v("：拦截"),r("code",[t._v("propKey in proxy")]),t._v("的操作，返回一个布尔值")]),t._v(" "),r("li",[r("strong",[t._v("deleteProperty(target, propKey)")]),t._v("：拦截"),r("code",[t._v("delete proxy[propKey]")]),t._v("的操作，返回一个布尔值")]),t._v(" "),r("li",[r("strong",[t._v("ownKeys(target)")]),t._v("：拦截"),r("code",[t._v("Object.getOwnPropertyNames(proxy)")]),t._v("、"),r("code",[t._v("Object.getOwnPropertySymbols(proxy)")]),t._v("、"),r("code",[t._v("Object.keys(proxy)")]),t._v("、"),r("code",[t._v("for...in")]),t._v("循环，返回一个数组\n该方法返回目标对象所有自身的属性的属性名，而"),r("code",[t._v("Object.keys()")]),t._v("的返回结果仅包括目标对象自身的可遍历属性")]),t._v(" "),r("li",[r("strong",[t._v("getOwnPropertyDescriptor(target, propKey)")]),t._v("：拦截"),r("code",[t._v("Object.getOwnPropertyDescriptor(proxy, propKey)")]),t._v("，返回属性的描述对象。")]),t._v(" "),r("li",[r("strong",[t._v("defineProperty(target, propKey, propDesc)")]),t._v("：拦截"),r("code",[t._v("Object.defineProperty(proxy, propKey, propDesc）")]),t._v("、"),r("code",[t._v("Object.defineProperties(proxy, propDescs)")]),t._v("，返回一个布尔值")]),t._v(" "),r("li",[r("strong",[t._v("preventExtensions(target)")]),t._v("：拦截"),r("code",[t._v("Object.preventExtensions(proxy)")]),t._v("，返回一个布尔值")]),t._v(" "),r("li",[r("strong",[t._v("getPrototypeOf(target)")]),t._v("：拦截"),r("code",[t._v("Object.getPrototypeOf(proxy)")]),t._v("，返回一个对象")]),t._v(" "),r("li",[r("strong",[t._v("isExtensible(target)")]),t._v("：拦截"),r("code",[t._v("Object.isExtensible(proxy)")]),t._v("，返回一个布尔值")]),t._v(" "),r("li",[r("strong",[t._v("setPrototypeOf(target, proto)")]),t._v("：拦截"),r("code",[t._v("Object.setPrototypeOf(proxy, proto)")]),t._v("，返回一个布尔值")])]),t._v(" "),r("p",[t._v("如果目标对象是函数，那么还有两种额外操作可以拦截")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("apply(target, object, args)")]),t._v("：拦截 Proxy 实例作为函数调用的操作\n比如"),r("code",[t._v("proxy(...args)")]),t._v("、"),r("code",[t._v("proxy.call(object, ...args)")]),t._v("、"),r("code",[t._v("proxy.apply(...)")])]),t._v(" "),r("li",[r("strong",[t._v("construct(target, args)")]),t._v("：拦截 Proxy 实例作为构造函数调用的操作\n比如"),r("code",[t._v("new proxy(...args)")])])]),t._v(" "),r("h1",{attrs:{id:"get"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[t._v("#")]),t._v(" Get")]),t._v(" "),r("h3",{attrs:{id:"拦截读取"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#拦截读取"}},[t._v("#")]),t._v(" 拦截读取")]),t._v(" "),r("div",{staticClass:"language-javascript extra-class"},[r("pre",{pre:!0,attrs:{class:"language-javascript"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj'")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" proxy "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" propertyKey")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propertyKey "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" target"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("propertyKey"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     \tconsole"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'没找到'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nproxy"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//name")]),t._v("\nproxy"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'没找到'")]),t._v("\n")])])]),r("h3",{attrs:{id:"get-方法可以继承"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#get-方法可以继承"}},[t._v("#")]),t._v(" get 方法可以继承")]),t._v(" "),r("h3",{attrs:{id:"实现一个生成所有-dom-的函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实现一个生成所有-dom-的函数"}},[t._v("#")]),t._v(" 实现一个生成所有 DOM 的函数")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("const dom = new Proxy({}, {\n  get(target, property) {\n    return function(attrs = {}, ...children) {\n      const el = document.createElement(property);\n      for (let prop of Object.keys(attrs)) {\n        el.setAttribute(prop, attrs[prop]);\n      }\n      for (let child of children) {\n        if (typeof child === 'string') {\n          child = document.createTextNode(child);\n        }\n        el.appendChild(child);\n      }\n      return el;\n    }\n  }\n});\n\nconst el = dom.div({},\n  'Hello, my name is ',\n  dom.a({href: '//example.com'}, 'Mark'),\n  '. I like:',\n  dom.ul({},\n    dom.li({}, 'The web'),\n    dom.li({}, 'Food'),\n    dom.li({}, '…actually that\\'s it')\n  )\n);\n\ndocument.body.appendChild(el);\n")])])]),r("h1",{attrs:{id:"set"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),r("p",[t._v("利用"),r("code",[t._v("set")]),t._v("方法，还可以数据绑定，即每当对象发生变化时，会自动更新 DOM")]),t._v(" "),r("h1",{attrs:{id:"proxy-revocable"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#proxy-revocable"}},[t._v("#")]),t._v(" Proxy.revocable")]),t._v(" "),r("p",[t._v("返回一个可取消的 Proxy 实例")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("let target = {};\nlet handler = {};\n\nlet {proxy, revoke} = Proxy.revocable(target, handler);\n\nproxy.foo = 123;\nproxy.foo // 123\n\nrevoke();\nproxy.foo // TypeError: Revoked\n")])])]),r("p",[r("code",[t._v("Proxy.revocable")]),t._v("方法返回一个对象，该对象的"),r("code",[t._v("proxy")]),t._v("属性是"),r("code",[t._v("Proxy")]),t._v("实例，"),r("code",[t._v("revoke")]),t._v("属性是一个函数，可以取消"),r("code",[t._v("Proxy")]),t._v("实例。上面代码中，当执行"),r("code",[t._v("revoke")]),t._v("函数之后，再访问"),r("code",[t._v("Proxy")]),t._v("实例，就会抛出一个错误")])])}),[],!1,null,null,null);e.default=s.exports}}]);