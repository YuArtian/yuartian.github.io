(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{549:function(t,s,a){"use strict";a.r(s);var e=a(45),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"箭头函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[t._v("#")]),t._v(" 箭头函数")]),t._v(" "),a("p",[t._v("ES6 允许使用“箭头”（"),a("code",[t._v("=>")]),t._v("）定义函数")]),t._v(" "),a("p",[t._v("箭头函数有几个使用注意点")]),t._v(" "),a("ul",[a("li",[t._v("函数体内的"),a("code",[t._v("this")]),t._v("对象，就是定义时所在的对象，而不是使用时所在的对象 "),a("code",[t._v("this")]),t._v("对象的指向是可变的，但是在箭头函数中没有 this， 导致内部的"),a("code",[t._v("this")]),t._v("就是外层代码块的"),a("code",[t._v("this")])]),t._v(" "),a("li",[t._v("不可以当作构造函数，也就是说，不可以使用"),a("code",[t._v("new")]),t._v("命令，否则会抛出一个错误\n因为箭头函数没有原型链（prototype），也就没有 constructor 构造函数")]),t._v(" "),a("li",[t._v("不能使用 call，apply，bind。还是因为没有 this")]),t._v(" "),a("li",[t._v("不可以使用"),a("code",[t._v("arguments")]),t._v("对象，该对象在函数体内不存在。如果要用，可以用 rest 参数代替")]),t._v(" "),a("li",[t._v("不可以使用"),a("code",[t._v("yield")]),t._v("命令，因此箭头函数不能用作 Generator 函数")])]),t._v(" "),a("h2",{attrs:{id:"箭头函数和this指向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数和this指向"}},[t._v("#")]),t._v(" 箭头函数和this指向")]),t._v(" "),a("p",[t._v("箭头函数中是没有 this 的，这导致它内部的 this 就是 定义时所在的对象")]),t._v(" "),a("h3",{attrs:{id:"settimeout-中的-this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#settimeout-中的-this"}},[t._v("#")]),t._v(" setTimeout 中的 this")]),t._v(" "),a("p",[t._v("setTimeout 中的回调函数是在全局环境下执行的，所以 this 的值，指向全局对象 window")]),t._v(" "),a("p",[t._v("可以用箭头函数修复这个问题")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let obj = {\n\ta: 'a',\n\tgetThis: function(){\n\t\tsetTimeout(() => {\n\t\t\tconsole.log('getThis', this)\n\t\t},0)\n\t}\n}\n\nobj.getThis() // obj\n")])])]),a("h3",{attrs:{id:"封装回调函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装回调函数"}},[t._v("#")]),t._v(" 封装回调函数")]),t._v(" "),a("p",[t._v("箭头函数可以让"),a("code",[t._v("this")]),t._v("指向固定化，这种特性很有利于封装回调函数")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var handler = {\n  id: '123456',\n\n  init: function() {\n    document.addEventListener('click',\n      event => this.doSomething(event.type), false);\n  },\n\n  doSomething: function(type) {\n    console.log('Handling ' + type  + ' for ' + this.id);\n  }\n};\n")])])]),a("p",[t._v("上面代码的"),a("code",[t._v("init")]),t._v("方法中，使用了箭头函数，这导致这个箭头函数里面的"),a("code",[t._v("this")]),t._v("，总是指向"),a("code",[t._v("handler")]),t._v("对象")]),t._v(" "),a("p",[t._v("否则，回调函数运行时，"),a("code",[t._v("this.doSomething")]),t._v("这一行会报错，因为此时"),a("code",[t._v("this")]),t._v("指向"),a("code",[t._v("document")]),t._v("对象")]),t._v(" "),a("h3",{attrs:{id:"不适用的情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不适用的情况"}},[t._v("#")]),t._v(" 不适用的情况")]),t._v(" "),a("h4",{attrs:{id:"定义对象的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义对象的方法"}},[t._v("#")]),t._v(" 定义对象的方法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  lives"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("jumps")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lives"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);