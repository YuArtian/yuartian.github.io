(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{442:function(e,t,v){"use strict";v.r(t);var _=v(45),o=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"react在渲染真实dom时做了哪些性能优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#react在渲染真实dom时做了哪些性能优化"}},[e._v("#")]),e._v(" React在渲染真实Dom时做了哪些性能优化")]),e._v(" "),v("p",[e._v("在 "),v("code",[e._v("IE（8-11）")]),e._v("和 "),v("code",[e._v("Edge")]),e._v("浏览器中，一个一个插入无子孙的节点，效率要远高于插入一整个序列化完整的节点树。")]),e._v(" "),v("p",[v("code",[e._v("React")]),e._v("通过 "),v("code",[e._v("lazyTree")]),e._v("，在 "),v("code",[e._v("IE（8-11）")]),e._v("和 "),v("code",[e._v("Edge")]),e._v("中进行单个节点依次渲染节点，而在其他浏览器中则首先将整个大的 "),v("code",[e._v("DOM")]),e._v("结构构建好，然后再整体插入容器。")]),e._v(" "),v("p",[e._v("并且，在单独渲染节点时， "),v("code",[e._v("React")]),e._v("还考虑了 "),v("code",[e._v("fragment")]),e._v("等特殊节点，这些节点则不会一个一个插入渲染")])])}),[],!1,null,null,null);t.default=o.exports}}]);