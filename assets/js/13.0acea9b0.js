(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{366:function(a,v,_){a.exports=_.p+"assets/img/npm_01.2a5889ee.png"},576:function(a,v,_){"use strict";_.r(v);var t=_(45),n=Object(t.a)({},(function(){var a=this,v=a.$createElement,t=a._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"npm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[a._v("#")]),a._v(" NPM")]),a._v(" "),t("p",[a._v("NPM（node package manager）node 包管理器")]),a._v(" "),t("h2",{attrs:{id:"安装机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装机制"}},[a._v("#")]),a._v(" 安装机制")]),a._v(" "),t("blockquote",[t("p",[a._v(".npmrc 配置 npm 源，设置 registry 地址")])]),a._v(" "),t("ol",[t("li",[t("p",[a._v("执行 "),t("code",[a._v("npm install")])])]),a._v(" "),t("li",[t("p",[a._v("首先，检查并获取 npm 配置\n这里的优先级为：项目级的 .npmrc 文件 > 用户级的 .npmrc 文件> 全局级的 .npmrc 文件 > npm 内置的 .npmrc 文件")])]),a._v(" "),t("li",[t("p",[a._v("检查项目中是否有 package-lock.json 文件")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("如果有，则检查 package-lock.json 和 package.json 中声明的依赖是否一致：")]),a._v(" "),t("ul",[t("li",[a._v("一致，直接使用 package-lock.json 中的信息，从缓存或网络资源中加载依赖；")]),a._v(" "),t("li",[a._v("不一致，按照 npm 版本进行处理（不同 npm 版本处理会有不同，具体处理方式如图所示）。")])])]),a._v(" "),t("li",[t("p",[a._v("如果没有，则根据 package.json 递归构建依赖树\n然后按照构建好的依赖树下载完整的依赖资源，在下载时就会检查是否存在相关资源缓存：")]),a._v(" "),t("ul",[t("li",[a._v("存在，则将缓存内容解压到 node_modules 中；")]),a._v(" "),t("li",[a._v("不存在，就先从 npm 远程仓库下载包，校验包的完整性，并添加到缓存，同时解压到 node_modules。")])]),a._v(" "),t("p",[a._v("最后生成 package-lock.json")])])])])]),a._v(" "),t("p",[t("img",{attrs:{src:_(366),alt:"npm安装流程"}})]),a._v(" "),t("h2",{attrs:{id:"npm缓存机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#npm缓存机制"}},[a._v("#")]),a._v(" npm缓存机制")]),a._v(" "),t("blockquote",[t("p",[a._v("对于一个依赖包的同一版本进行本地化缓存，是当代依赖包管理工具的一个常见设计")])]),a._v(" "),t("h3",{attrs:{id:"文件位置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件位置"}},[a._v("#")]),a._v(" 文件位置")]),a._v(" "),t("p",[a._v("可以使用 "),t("code",[a._v("npm config get cache")]),a._v(" 命令，查看缓存文件位置")]),a._v(" "),t("p",[a._v("默认存在 "),t("code",[a._v("./User/xx/.npm/_cacache")]),a._v(" 文件中（Mac）")]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("npm cache clean --force")]),a._v(" 清空缓存的文件")]),a._v(" "),t("p",[a._v("接下来打开"),t("code",[a._v("_cacache")]),a._v("文件，看看 npm 缓存了哪些东西，一共有 3 个目录：")]),a._v(" "),t("ul",[t("li",[a._v("content-v2")]),a._v(" "),t("li",[a._v("index-v5")]),a._v(" "),t("li",[a._v("tmp")])]),a._v(" "),t("p",[a._v("其中 content-v2 里面基本都是一些二进制文件。为了使这些二进制文件可读，我们把二进制文件的扩展名改为 .tgz，然后进行解压，得到的结果其实就是我们的 npm 包资源。")]),a._v(" "),t("p",[a._v("而 index-v5 文件中，我们采用跟刚刚一样的操作就可以获得一些描述性的文件，事实上这些内容就是 content-v2 里文件的索引。")]),a._v(" "),t("h2",{attrs:{id:"npx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#npx"}},[a._v("#")]),a._v(" npx")]),a._v(" "),t("p",[a._v("用于执行npm包的二进制文件")]),a._v(" "),t("p",[a._v("npx 会自动查找当前依赖包中的可执行文件，如果找不到，就会去 PATH 里找。如果依然找不到，就会帮你安装")]),a._v(" "),t("h2",{attrs:{id:"多源npm和私服部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多源npm和私服部署"}},[a._v("#")]),a._v(" 多源npm和私服部署")]),a._v(" "),t("h3",{attrs:{id:"多源管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多源管理"}},[a._v("#")]),a._v(" 多源管理")]),a._v(" "),t("p",[a._v("npm 中的源（registry），其实就是一个查询服务")]),a._v(" "),t("p",[a._v("可以通过"),t("code",[a._v("npm config set")]),a._v("命令来设置安装源或者某个 "),t("code",[a._v("scope")]),a._v(" 对应的安装源")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.npmjs.com/package/nrm",target:"_blank",rel:"noopener noreferrer"}},[a._v("nrm"),t("OutboundLink")],1),a._v(" 是常见的 npm 源管理工具，可以实现快速添加，切换源地址")]),a._v(" "),t("h3",{attrs:{id:"私服部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#私服部署"}},[a._v("#")]),a._v(" 私服部署")]),a._v(" "),t("h4",{attrs:{id:"必要"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#必要"}},[a._v("#")]),a._v(" 必要")]),a._v(" "),t("ul",[t("li",[a._v("虽然 npm 并没有被屏蔽，但是下载第三方依赖包的速度依然较缓慢，这严重影响 CI/CD 流程或本地开发效率。部署镜像后，一般可以确保高速、稳定的 npm 服务")]),a._v(" "),t("li",[a._v("使发布私有模块更加安全")]),a._v(" "),t("li",[a._v("审核机制也可以保障私服上的 npm 模块质量和安全")])]),a._v(" "),t("h4",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[a._v("#")]),a._v(" 部署")]),a._v(" "),t("p",[a._v("现在社区上主要有 3 种工具来搭建 npm 私服：nexus、verdaccio 以及 cnpm")])])}),[],!1,null,null,null);v.default=n.exports}}]);