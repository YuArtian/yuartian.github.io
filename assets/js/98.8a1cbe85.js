(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{462:function(e,s,t){"use strict";t.r(s);var v=t(45),_=Object(v.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"修饰符sync的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修饰符sync的作用"}},[e._v("#")]),e._v(" 修饰符sync的作用")]),e._v(" "),t("p",[e._v("在 Vue 中，子父组件最常用的通信方式就是通过 "),t("code",[e._v("props")]),e._v(" 进行数据传递")]),e._v(" "),t("p",[t("code",[e._v("props")]),e._v(" 值只能在父组件中更新并传递给子组件，在子组件内部，是不允许改变传递进来的 "),t("code",[e._v("props")]),e._v(" 值")]),e._v(" "),t("p",[e._v("这样做是为了保证数据单向流通")]),e._v(" "),t("p",[e._v("但有时候，我们会遇到一些场景，需要在子组件内部改变 "),t("code",[e._v("props")]),e._v(" 属性值并更新到父组件中，这时就需要用到 "),t("code",[e._v(".sync")]),e._v(" 修饰符")]),e._v(" "),t("p",[e._v("修饰符 "),t("code",[e._v("sync")]),e._v(" 的功能是：当一个子组件改变了一个 "),t("code",[e._v("prop")]),e._v(" 的值时，这个变化也会同步到父组件中所绑定的值")])])}),[],!1,null,null,null);s.default=_.exports}}]);