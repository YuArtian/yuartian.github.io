(window.webpackJsonp=window.webpackJsonp||[]).push([[243],{607:function(t,e,a){"use strict";a.r(e);var r=a(45),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"其他工具类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他工具类型"}},[t._v("#")]),t._v(" 其他工具类型")]),t._v(" "),a("blockquote",[a("p",[t._v("https://github.com/piotrwitek/utility-types")])]),t._v(" "),a("h2",{attrs:{id:"nonnullable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nonnullable"}},[t._v("#")]),t._v(" NonNullable"),a("Type")],1),t._v(" "),a("p",[t._v("通过从 Type 中排除 null 和 undefined 来构造一个类型")]),t._v(" "),a("h2",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters"),a("Type")],1),t._v(" "),a("p",[t._v("获取函数类型 Type 中的参数，组成 元组 类型返回\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Parameters1<T extends (...args: any) => any> = T extends (...args: infer P) =>  any ? P : never")]),t._v(" "),a("h2",{attrs:{id:"constructorparameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructorparameters"}},[t._v("#")]),t._v(" ConstructorParameters"),a("Type")],1),t._v(" "),a("p",[t._v("获取构造函数类型")]),t._v(" "),a("h2",{attrs:{id:"returntype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returntype"}},[t._v("#")]),t._v(" ReturnType"),a("Type")],1),t._v(" "),a("p",[t._v("获取 Type 返回的类型")]),t._v(" "),a("h2",{attrs:{id:"thisparametertype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#thisparametertype"}},[t._v("#")]),t._v(" ThisParameterType"),a("Type")],1),t._v(" "),a("p",[t._v("提取函数类型Type 的this 参数的类型")])])}),[],!1,null,null,null);e.default=s.exports}}]);