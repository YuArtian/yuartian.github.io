(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{602:function(t,a,r){"use strict";r.r(a);var p=r(45),e=Object(p.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"ts"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ts"}},[t._v("#")]),t._v(" TS")]),t._v(" "),r("blockquote",[r("p",[t._v("https://ts.xcatliu.com/introduction/what-is-typescript.html")])]),t._v(" "),r("h2",{attrs:{id:"typescript-是静态类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typescript-是静态类型"}},[t._v("#")]),t._v(" TypeScript 是静态类型")]),t._v(" "),r("p",[t._v("类型系统按照「类型检查的时机」来分类，可以分为动态类型和静态类型\n动态类型是指在运行时才会进行类型检查，这种语言的类型错误往往会导致运行时错误\nJavaScript 是一门解释型语言，没有编译阶段，所以它是动态类型")]),t._v(" "),r("h2",{attrs:{id:"typescript-是弱类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typescript-是弱类型"}},[t._v("#")]),t._v(" TypeScript 是弱类型")]),t._v(" "),r("p",[t._v("类型系统按照「是否允许隐式类型转换」来分类，可以分为强类型和弱类型。\nTypeScript 是完全兼容 JavaScript 的，它不会修改 JavaScript 运行时的特性，所以它们都是弱类型。")]),t._v(" "),r("h2",{attrs:{id:"与标准同步发展"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#与标准同步发展"}},[t._v("#")]),t._v(" 与标准同步发展")]),t._v(" "),r("p",[t._v("一个新的语法从提案到变成正式标准，需要经历以下几个阶段：\nStage 0：展示阶段，仅仅是提出了讨论、想法，尚未正式提案。\nStage 1：征求意见阶段，提供抽象的 API 描述，讨论可行性，关键算法等。\nStage 2：草案阶段，使用正式的规范语言精确描述其语法和语义。\nStage 3：候选人阶段，语法的设计工作已完成，需要浏览器、Node.js 等环境支持，搜集用户的反馈。\nStage 4：定案阶段，已准备好将其添加到正式的 ECMAScript 标准中")]),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("p",[t._v("什么是 TypeScript？")]),t._v(" "),r("p",[t._v("TypeScript 是添加了类型系统的 JavaScript，适用于任何规模的项目。\nTypeScript 是一门静态类型、弱类型的语言。\nTypeScript 是完全兼容 JavaScript 的，它不会修改 JavaScript 运行时的特性。\nTypeScript 可以编译为 JavaScript，然后运行在浏览器、Node.js 等任何能运行 JavaScript 的环境中。\nTypeScript 拥有很多编译选项，类型检查的严格程度由你决定。\nTypeScript 可以和 JavaScript 共存，这意味着 JavaScript 项目能够渐进式的迁移到 TypeScript。\nTypeScript 增强了编辑器（IDE）的功能，提供了代码补全、接口提示、跳转到定义、代码重构等能力。\nTypeScript 拥有活跃的社区，大多数常用的第三方库都提供了类型声明。\nTypeScript 与标准同步发展，符合最新的 ECMAScript 标准（stage 3）。")]),t._v(" "),r("p",[t._v("TypeScript 是结构类型系统，类型之间的对比只会比较它们最终的结构，而会忽略它们定义时的关系")]),t._v(" "),r("blockquote",[r("p",[t._v("https://ts.xcatliu.com/basics/type-assertion.html#%E7%B1%BB%E5%9E%8B%E6%96%AD%E8%A8%80%E7%9A%84%E9%99%90%E5%88%B6")])])])}),[],!1,null,null,null);a.default=e.exports}}]);