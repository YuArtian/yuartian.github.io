(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{593:function(e,n,a){"use strict";a.r(n);var t=a(45),r=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"事务机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务机制"}},[e._v("#")]),e._v(" 事务机制")]),e._v(" "),a("blockquote",[a("p",[e._v("https://blog.csdn.net/xiaomingelv/article/details/86183735")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +-----------------\x3e|-|---|-|---|--\x3e|anyMethod|---|---|-|---|-|--------\x3e\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n\n")])])]),a("p",[e._v("可以这样理解事务，react中用事务执行方法，就是用 wrapper 把方法包裹起来，然后每个 wapper 中都提供一个initialize方法和一个close方法")]),e._v(" "),a("p",[e._v("当需要使用事务调用 方法，例如上图中的 anyMethod 时，使用事务提供的 perform 方法，将需要执行的方法传入，这个时候就会按顺序执行 wrapper.initalize，anyMethod,wrapper.close")]),e._v(" "),a("p",[e._v("而且，事务还支持多个事务的嵌套，当执行方法被多个wapper包裹时，事务会先按顺序执行所有的initalize方法，再执行anyMethod，最后按顺序执行所有的close函数")]),e._v(" "),a("p",[e._v("例如上图就表示会按以下顺序执行wrapper1.initalize,wrapper2.initalize,anyMethod,wrapper1.close,wrapper2.close")])])}),[],!1,null,null,null);n.default=r.exports}}]);