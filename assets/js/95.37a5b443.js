(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{459:function(t,v,e){"use strict";e.r(v);var _=e(45),a=Object(_.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"react-事件机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-事件机制"}},[t._v("#")]),t._v(" React 事件机制")]),t._v(" "),e("blockquote",[e("p",[t._v("https://juejin.im/post/5d7678b06fb9a06b2b47a03c")])]),t._v(" "),e("p",[t._v("对react 事件机制基本理解，react自身实现了一套自己的事件机制，包括事件注册、事件的合成、事件冒泡、事件派发等，虽然和原生的是两码事，但也是基于浏览器的事件机制下完成的。")]),t._v(" "),e("p",[t._v("我们都知道react 的所有事件并没有绑定到具体的dom节点上而是绑定在了document 上，然后由统一的事件处理程序来处理，同时也是基于浏览器的事件机制（冒泡），所有节点的事件都会在 document 上触发")]),t._v(" "),e("p",[t._v("所有的事件根据不同的事件类型都绑定在了 "),e("code",[t._v("document")]),t._v(" 上，触发函数统一是 "),e("code",[t._v("dispatchEvent")])]),t._v(" "),e("h2",{attrs:{id:"对于合成的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对于合成的理解"}},[t._v("#")]),t._v(" 对于合成的理解")]),t._v(" "),e("p",[t._v("原生事件（阻止冒泡）会阻止合成事件的执行")]),t._v(" "),e("p",[t._v("合成事件（阻止冒泡）不会阻止原生事件的执行")]),t._v(" "),e("p",[t._v("两者最好不要混合使用，避免出现一些奇怪的问题")]),t._v(" "),e("p",[t._v("react 自己做这么多的意义是什么？")]),t._v(" "),e("ol",[e("li",[t._v("减少内存消耗，提升性能，不需要注册那么多的事件了，一种事件类型只在 document 上注册一次")]),t._v(" "),e("li",[t._v("统一规范，解决 ie 事件兼容问题，简化事件逻辑")]),t._v(" "),e("li",[t._v("对开发者友好")])]),t._v(" "),e("p",[t._v("合成不单单是事件的合成和处理，从广义上来说还包括：")]),t._v(" "),e("ol",[e("li",[t._v("对原生事件的封装")]),t._v(" "),e("li",[t._v("对某些原生事件的升级和改造")]),t._v(" "),e("li",[t._v("不同浏览器事件兼容的处理")])]),t._v(" "),e("h2",{attrs:{id:"事件注册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件注册"}},[t._v("#")]),t._v(" 事件注册")]),t._v(" "),e("p",[t._v("a. 事件注册 - 组件挂载阶段，根据组件内的声明的事件类型-onclick，onchange 等，给 document 上添加事件 -addEventListener，并指定统一的事件处理程序 dispatchEvent。")]),t._v(" "),e("p",[t._v("b. 事件存储 - 就是把 react 组件内的所有事件统一的存放到一个对象里，缓存起来，为了在触发事件的时候可以查找到对应的方法去执行")])])}),[],!1,null,null,null);v.default=a.exports}}]);